name: Check prerelease

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Checked version'
        required: true

jobs:
  check-prerelease:
    runs-on: ubuntu-latest
    steps:
      # - name: Wait for check release completion
      #   uses: actions/github-script@v7
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     script: |
      #       const checkRunName = `Release ${{ inputs.version }}`;
            
      #       // Get the check run
      #       const { data: checkRuns } = await github.rest.checks.listForRef({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         ref: context.sha,
      #         check_name: checkRunName
      #       });
            
      #       console.log(checkRuns);

      #       if (checkRuns.check_runs.length === 0) {
      #         throw new Error(`Check run "${checkRunName}" not found`);
      #       }
            
      #       const checkRun = checkRuns.check_runs[0];
      #       console.log(`Found check run ${checkRun.id} with status ${checkRun.status} and conclusion ${checkRun.conclusion}`);
            
      #       // Wait for check run completion
      #       const maxWaitTime = 6 * 60 * 60 * 1000; // 6 hours
      #       const pollInterval = 30 * 1000; // 30 seconds
      #       const startTime = Date.now();
            
      #       while (Date.now() - startTime < maxWaitTime) {
      #         // Get updated check run status
      #         const { data: updatedCheckRun } = await github.rest.checks.get({
      #           owner: context.repo.owner,
      #           repo: context.repo.repo,
      #           check_run_id: checkRun.id
      #         });
              
      #         console.log(`Check run status: ${updatedCheckRun.status}, conclusion: ${updatedCheckRun.conclusion}`);
              
      #         // Check if check run is completed
      #         if (updatedCheckRun.status === 'completed') {
      #           if (updatedCheckRun.conclusion === 'success') {
      #             console.log('Release completed successfully');
      #             return;
      #           } else {
      #             throw new Error(`Release failed with conclusion: ${updatedCheckRun.conclusion}`);
      #           }
      #         }
              
      #         // Wait before next check
      #         await new Promise(resolve => setTimeout(resolve, pollInterval));
      #       }
            
      #       throw new Error('Release did not complete within 6 hours');
      
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: 'https://registry.npmjs.org'
      
      # - name: Unpublish package @diplodoc/cli
      #   run: npm unpublish @diplodoc/cli@${{ inputs.version }}
      #   env:
      #     NODE_AUTH_TOKEN: ${{secrets.ROBOT_DATAUI_NPM_TOKEN}}
      
      # - name: Unpublish package @diplodoc/cli-tests
      #   run: npm unpublish @diplodoc/cli-tests@${{ inputs.version }}
      #   env:
      #     NODE_AUTH_TOKEN: ${{secrets.ROBOT_DATAUI_NPM_TOKEN}}